shift+<F10> or the 'files' button brings up the menu to select show menubar for gnome-terminal.

byobu should replace completely the screen and terminals/tabs suite.

installed the vim plugins in: https://realpython.com/blog/python/vim-and-python-a-match-made-in-heaven/

also liked: http://unlogic.co.uk/2013/02/08/vim-as-a-python-ide/

they differ in the use of python mode

===
Skip errors and warnings                                *'g:pymode_lint_ignore'*
E.g. "E501,W002", "E2,W" (Skip all Warnings and Errors that starts with E2) and etc
>
    let g:pymode_lint_ignore = "E501,W"

===
rope a autocompletion

===
motion and folding

===
try to make all python run and debug inside vim (python mode?)

understand: *****
    Rope
        Copyright (C) 2006-2010 Ali Gholami Rudi
        Copyright (C) 2009-2010 Anton Gritsay

    Pylint
        Copyright (C) 2003-2011 LOGILAB S.A. (Paris, FRANCE).
        http://www.logilab.fr/

    Pyflakes:
        Copyright (c) 2005 Divmod, Inc.
        http://www.divmod.com/

    fugitive


=====
Here rope can easily infer the type of var1. But for knowing the type of var2, it needs to analyze the items inserted into l2 which might happen in other modules. Rope can do that by running SOA on that module.

=======
You can enable using Rope as providing for Omni completion by setting omnifunc variable to RopeCompleteFunc. E.g., by putting something like this in your ~/.vimrc:

autocmd FileType python setlocal omnifunc=RopeCompleteFunc

=====

Jedi-Vim
Best extension, which makes full Python IDE from your Vim!

vim-dispatch and vim-python-tools

===
./configure --enable-perlinterp --enable-python3interp --enable-rubyinterp --enable-cscope --enable-gui=auto --enable-gtk2-check --enable-gnome-check --with-features=huge --enable-multibyte --with-x --with-compiledby="xorpd" --with-python3-config-dir=/usr/lib/python3.4/config-3.4m-x86_64-linux-gnu --prefix=/opt/vim74 --with-vim-name=vim3

===

rope, vim python mode, música com os audios renderizados pelos scripts em tabs diferentes.
byobu, nerdtree, fugitive.
Tabs, automate, restructure, refactoring,, flint, jobs, screen, imux, gnome-terminal, terminator, autocompletion, byobu inside byobu, 


===
Algorítmo genérico para selecionar os que gerarem áudio e que mais agradarem (ajuste de fitness).
Usar para gerar música através dos dados sociais. Deixar para os comentarios e likes alterarem o fitness.
Fazer em python mesmo, sem andar nas tabs do vim.
Cada indivíduo consiste em uma string que, se gerar música (ou especificacoes para), possui fitness>0.
Se demorar para sempre -> 0. Os critérios para o fitness, espectrais e rítmicos, podem ser tunados iterativamente
pelo usuário.
Uma estratégia dinâmica pode ser: alternar iterações com operações mais garantidas de gerar sons, para popular,
introduzir mutações que dizimam a população para gerar diversidade.


